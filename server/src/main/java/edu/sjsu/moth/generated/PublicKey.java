// THIS FILE WAS GENERATED BY JSON2JAVA
// IT HAS NOT BEEN CHANGED. (IF IT HAS REMOVE THIS LINE)
// CHANGES MADE:
//   * NONE SO FAR

package edu.sjsu.moth.generated;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({ "id", "owner", "publicKeyPem" })
public class PublicKey {

    @JsonProperty("id")
    public String id;
    @JsonProperty("owner")
    public String owner;
    @JsonProperty("publicKeyPem")
    public String publicKeyPem;

    /**
     * No args constructor for use in serialization
     */
    public PublicKey() {
    }

    public PublicKey(String id, String owner, String publicKeyPem) {
        super();
        this.id = id;
        this.owner = owner;
        this.publicKeyPem = publicKeyPem;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(PublicKey.class.getName())
                .append('@')
                .append(Integer.toHexString(System.identityHashCode(this)))
                .append('[');
        sb.append("id");
        sb.append('=');
        sb.append(((this.id == null) ? "<null>" : this.id));
        sb.append(',');
        sb.append("owner");
        sb.append('=');
        sb.append(((this.owner == null) ? "<null>" : this.owner));
        sb.append(',');
        sb.append("publicKeyPem");
        sb.append('=');
        sb.append(((this.publicKeyPem == null) ? "<null>" : this.publicKeyPem));
        sb.append(',');
        if (sb.charAt((sb.length() - 1)) == ',') {
            sb.setCharAt((sb.length() - 1), ']');
        } else {
            sb.append(']');
        }
        return sb.toString();
    }

    @Override
    public int hashCode() {
        int result = 1;
        result = ((result * 31) + ((this.owner == null) ? 0 : this.owner.hashCode()));
        result = ((result * 31) + ((this.id == null) ? 0 : this.id.hashCode()));
        result = ((result * 31) + ((this.publicKeyPem == null) ? 0 : this.publicKeyPem.hashCode()));
        return result;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if (!(other instanceof PublicKey)) {
            return false;
        }
        PublicKey rhs = ((PublicKey) other);
        return (((Objects.equals(this.owner, rhs.owner)) && (Objects.equals(this.id, rhs.id))) && (Objects.equals(this.publicKeyPem, rhs.publicKeyPem)));
    }

}