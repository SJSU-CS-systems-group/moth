
// THIS FILE WAS GENERATED BY JSON2JAVA
// IT HAS NOT BEEN CHANGED. (IF IT HAS REMOVE THIS LINE)
// CHANGES MADE:
//   * NONE SO FAR


package edu.sjsu.moth.generated;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "shortcode",
    "url",
    "static_url",
    "visible_in_picker"
})
public class Emoji {

    @JsonProperty("shortcode")
    public String shortcode;
    @JsonProperty("url")
    public String url;
    @JsonProperty("static_url")
    public String staticUrl;
    @JsonProperty("visible_in_picker")
    public Boolean visibleInPicker;

    /**
     * No args constructor for use in serialization
     * 
     */
    public Emoji() {
    }

    public Emoji(String shortcode, String url, String staticUrl, Boolean visibleInPicker) {
        super();
        this.shortcode = shortcode;
        this.url = url;
        this.staticUrl = staticUrl;
        this.visibleInPicker = visibleInPicker;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(Emoji.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
        sb.append("shortcode");
        sb.append('=');
        sb.append(((this.shortcode == null)?"<null>":this.shortcode));
        sb.append(',');
        sb.append("url");
        sb.append('=');
        sb.append(((this.url == null)?"<null>":this.url));
        sb.append(',');
        sb.append("staticUrl");
        sb.append('=');
        sb.append(((this.staticUrl == null)?"<null>":this.staticUrl));
        sb.append(',');
        sb.append("visibleInPicker");
        sb.append('=');
        sb.append(((this.visibleInPicker == null)?"<null>":this.visibleInPicker));
        sb.append(',');
        if (sb.charAt((sb.length()- 1)) == ',') {
            sb.setCharAt((sb.length()- 1), ']');
        } else {
            sb.append(']');
        }
        return sb.toString();
    }

    @Override
    public int hashCode() {
        int result = 1;
        result = ((result* 31)+((this.staticUrl == null)? 0 :this.staticUrl.hashCode()));
        result = ((result* 31)+((this.shortcode == null)? 0 :this.shortcode.hashCode()));
        result = ((result* 31)+((this.visibleInPicker == null)? 0 :this.visibleInPicker.hashCode()));
        result = ((result* 31)+((this.url == null)? 0 :this.url.hashCode()));
        return result;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Emoji) == false) {
            return false;
        }
        Emoji rhs = ((Emoji) other);
        return (((((this.staticUrl == rhs.staticUrl)||((this.staticUrl!= null)&&this.staticUrl.equals(rhs.staticUrl)))&&((this.shortcode == rhs.shortcode)||((this.shortcode!= null)&&this.shortcode.equals(rhs.shortcode))))&&((this.visibleInPicker == rhs.visibleInPicker)||((this.visibleInPicker!= null)&&this.visibleInPicker.equals(rhs.visibleInPicker))))&&((this.url == rhs.url)||((this.url!= null)&&this.url.equals(rhs.url))));
    }

}
