// THIS FILE WAS GENERATED BY JSON2JAVA
// IT HAS NOT BEEN CHANGED. (IF IT HAS REMOVE THIS LINE)
// CHANGES MADE:
//   * NONE SO FAR

package edu.sjsu.moth.generated;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({ "last_read_id", "version", "updated_at" })
public class Marker {

    @JsonProperty("last_read_id")
    public String lastReadId;
    @JsonProperty("version")
    public Integer version;
    @JsonProperty("updated_at")
    public String updatedAt;

    /**
     * No args constructor for use in serialization
     */
    public Marker() {
    }

    public Marker(String lastReadId, Integer version, String updatedAt) {
        super();
        this.lastReadId = lastReadId;
        this.version = version;
        this.updatedAt = updatedAt;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(Marker.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this)))
                .append('[');
        sb.append("lastReadId");
        sb.append('=');
        sb.append(((this.lastReadId == null) ? "<null>" : this.lastReadId));
        sb.append(',');
        sb.append("version");
        sb.append('=');
        sb.append(((this.version == null) ? "<null>" : this.version));
        sb.append(',');
        sb.append("updatedAt");
        sb.append('=');
        sb.append(((this.updatedAt == null) ? "<null>" : this.updatedAt));
        sb.append(',');
        if (sb.charAt((sb.length() - 1)) == ',') {
            sb.setCharAt((sb.length() - 1), ']');
        } else {
            sb.append(']');
        }
        return sb.toString();
    }

    @Override
    public int hashCode() {
        int result = 1;
        result = ((result * 31) + ((this.lastReadId == null) ? 0 : this.lastReadId.hashCode()));
        result = ((result * 31) + ((this.version == null) ? 0 : this.version.hashCode()));
        result = ((result * 31) + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode()));
        return result;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Marker) == false) {
            return false;
        }
        Marker rhs = ((Marker) other);
        return ((((this.lastReadId == rhs.lastReadId) ||
                ((this.lastReadId != null) && this.lastReadId.equals(rhs.lastReadId))) &&
                ((this.version == rhs.version) || ((this.version != null) && this.version.equals(rhs.version)))) &&
                ((this.updatedAt == rhs.updatedAt) ||
                        ((this.updatedAt != null) && this.updatedAt.equals(rhs.updatedAt))));
    }

}
